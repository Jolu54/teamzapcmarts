{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/deploy/teamzap/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/deploy/teamzap/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar _assertThisInitialized = require(\"/home/deploy/teamzap/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\nvar _inherits = require(\"/home/deploy/teamzap/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\nvar _createSuper = require(\"/home/deploy/teamzap/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _trelloSmoothDnd = _interopRequireWildcard(require(\"trello-smooth-dnd\"));\n_trelloSmoothDnd.default.dropHandler = _trelloSmoothDnd.dropHandlers.reactDropHandler().handler;\n_trelloSmoothDnd.default.wrapChild = function (p) {\n  return p;\n}; // dont wrap children they will already be wrapped\nvar Container = /*#__PURE__*/function (_react$Component) {\n  _inherits(Container, _react$Component);\n  var _super = _createSuper(Container);\n  function Container(props) {\n    var _this;\n    _classCallCheck(this, Container);\n    _this = _super.call(this, props);\n    _this.getContainerOptions = _this.getContainerOptions.bind(_assertThisInitialized(_this));\n    _this.setRef = _this.setRef.bind(_assertThisInitialized(_this));\n    _this.prevContainer = null;\n    return _this;\n  }\n  _createClass(Container, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.containerDiv = this.containerDiv || _reactDom.default.findDOMNode(this);\n      this.prevContainer = this.containerDiv;\n      this.container = (0, _trelloSmoothDnd.default)(this.containerDiv, this.getContainerOptions());\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.container.dispose();\n      this.container = null;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.containerDiv = this.containerDiv || _reactDom.default.findDOMNode(this);\n      if (this.containerDiv) {\n        if (this.prevContainer && this.prevContainer !== this.containerDiv) {\n          this.container.dispose();\n          this.container = (0, _trelloSmoothDnd.default)(this.containerDiv, this.getContainerOptions());\n          this.prevContainer = this.containerDiv;\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.render) {\n        return this.props.render(this.setRef);\n      } else {\n        return _react.default.createElement(\"div\", {\n          style: this.props.style,\n          ref: this.setRef\n        }, this.props.children);\n      }\n    }\n  }, {\n    key: \"setRef\",\n    value: function setRef(element) {\n      this.containerDiv = element;\n    }\n  }, {\n    key: \"getContainerOptions\",\n    value: function getContainerOptions() {\n      var _this2 = this;\n      var functionProps = {};\n      if (this.props.onDragStart) {\n        functionProps.onDragStart = function () {\n          var _this2$props;\n          return (_this2$props = _this2.props).onDragStart.apply(_this2$props, arguments);\n        };\n      }\n      if (this.props.onDragEnd) {\n        functionProps.onDragEnd = function () {\n          var _this2$props2;\n          return (_this2$props2 = _this2.props).onDragEnd.apply(_this2$props2, arguments);\n        };\n      }\n      if (this.props.onDrop) {\n        functionProps.onDrop = function () {\n          var _this2$props3;\n          return (_this2$props3 = _this2.props).onDrop.apply(_this2$props3, arguments);\n        };\n      }\n      if (this.props.getChildPayload) {\n        functionProps.getChildPayload = function () {\n          var _this2$props4;\n          return (_this2$props4 = _this2.props).getChildPayload.apply(_this2$props4, arguments);\n        };\n      }\n      if (this.props.shouldAnimateDrop) {\n        functionProps.shouldAnimateDrop = function () {\n          var _this2$props5;\n          return (_this2$props5 = _this2.props).shouldAnimateDrop.apply(_this2$props5, arguments);\n        };\n      }\n      if (this.props.shouldAcceptDrop) {\n        functionProps.shouldAcceptDrop = function () {\n          var _this2$props6;\n          return (_this2$props6 = _this2.props).shouldAcceptDrop.apply(_this2$props6, arguments);\n        };\n      }\n      if (this.props.onDragEnter) {\n        functionProps.onDragEnter = function () {\n          var _this2$props7;\n          return (_this2$props7 = _this2.props).onDragEnter.apply(_this2$props7, arguments);\n        };\n      }\n      if (this.props.onDragLeave) {\n        functionProps.onDragLeave = function () {\n          var _this2$props8;\n          return (_this2$props8 = _this2.props).onDragLeave.apply(_this2$props8, arguments);\n        };\n      }\n      if (this.props.render) {\n        functionProps.render = function () {\n          var _this2$props9;\n          return (_this2$props9 = _this2.props).render.apply(_this2$props9, arguments);\n        };\n      }\n      if (this.props.onDropReady) {\n        functionProps.onDropReady = function () {\n          var _this2$props10;\n          return (_this2$props10 = _this2.props).onDropReady.apply(_this2$props10, arguments);\n        };\n      }\n      if (this.props.getGhostParent) {\n        functionProps.getGhostParent = function () {\n          var _this2$props11;\n          return (_this2$props11 = _this2.props).getGhostParent.apply(_this2$props11, arguments);\n        };\n      }\n      return Object.assign({}, this.props, functionProps);\n    }\n  }]);\n  return Container;\n}(_react.Component);\nContainer.propTypes = {\n  behaviour: _propTypes.default.oneOf([\"move\", \"copy\", \"drag-zone\"]),\n  groupName: _propTypes.default.string,\n  orientation: _propTypes.default.oneOf([\"horizontal\", \"vertical\"]),\n  style: _propTypes.default.object,\n  dragHandleSelector: _propTypes.default.string,\n  className: _propTypes.default.string,\n  nonDragAreaSelector: _propTypes.default.string,\n  dragBeginDelay: _propTypes.default.number,\n  animationDuration: _propTypes.default.number,\n  autoScrollEnabled: _propTypes.default.string,\n  lockAxis: _propTypes.default.string,\n  dragClass: _propTypes.default.string,\n  dropClass: _propTypes.default.string,\n  onDragStart: _propTypes.default.func,\n  onDragEnd: _propTypes.default.func,\n  onDrop: _propTypes.default.func,\n  getChildPayload: _propTypes.default.func,\n  shouldAnimateDrop: _propTypes.default.func,\n  shouldAcceptDrop: _propTypes.default.func,\n  onDragEnter: _propTypes.default.func,\n  onDragLeave: _propTypes.default.func,\n  render: _propTypes.default.func,\n  getGhostParent: _propTypes.default.func,\n  removeOnDropOut: _propTypes.default.bool\n};\nContainer.defaultProps = {\n  behaviour: 'move',\n  orientation: 'vertical',\n  className: 'reactTrelloBoard'\n};\nvar _default = Container;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}